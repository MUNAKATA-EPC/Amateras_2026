Title:Main - [ 回り込みV２+ 開発途中 より滑らかな方向修正 - コピー ] DAISEN C-Style for TJ3B  [ Ver.20190706 ]
CN01:前
CN02:右
CN03:後
CN04:左
CN05:
CN06:
CN07:
CN08:
CN09:RED3
CN10:RED2
[0000]:sno:08,cno:08,val:111111-110030-010002,cmt:
[0001]:sno:33,cno:33,val:000000-000000-000000,cmt:int MoterSpeed = 85;  	// IRボールを追うときの動く速さ
[0002]:sno:33,cno:33,val:000000-000000-000000,cmt:int GyroMoterSpeed = 15;  	// ジャイロ補正のときの速さ
[0003]:sno:33,cno:33,val:000000-000000-000000,cmt:int IRaroundValue = 60;  	// 回り込みの角度
[0004]:sno:33,cno:33,val:000000-000000-000000,cmt:double PIXY_val = 160;  	// PIXYの値
[0005]:sno:33,cno:33,val:000000-000000-000000,cmt:double RfLb_X;  	// 右前、左後のモータの出力
[0006]:sno:33,cno:33,val:000000-000000-000000,cmt:double LfRb_Y;  	// 左前、右後のモータの出力
[0007]:sno:33,cno:33,val:000000-000000-000000,cmt:double IRedge;  	// IRの角度
[0008]:sno:33,cno:33,val:000000-000000-000000,cmt:double GYROedge;  	// ジャイロの角度
[0009]:sno:33,cno:33,val:000000-000000-000000,cmt:double Weight_X = 0.0;
[0010]:sno:33,cno:33,val:000000-000000-000000,cmt:double Weight_Y = 0.0;
[0011]:sno:33,cno:33,val:000000-000000-000000,cmt:double Weight_angle = 0.0;
[0012]:sno:33,cno:33,val:000000-000000-000000,cmt:int IRdist = 5;
[0013]:sno:31,cno:31,val:150000-000001-000000,cmt:Pixy攻める方向を指定
[0014]:sno:37,cno:37,val:000001-000001-000000,cmt:
[0015]:sno:34,cno:34,val:000000-000000-000000,cmt:
[0016]:sno:04,cno:01,val:000000-000000-000000,cmt:
[0017]:sno:01,cno:14,val:000010-000070-000000,cmt:タクトスイッチが押されたとき
[0018]:sno:31,cno:31,val:150161-000001-000000,cmt:
[0019]:sno:01,cno:31,val:155000-000003-000000,cmt:
[0020]:sno:31,cno:31,val:150000-000001-000000,cmt:
[0021]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0022]:sno:01,cno:31,val:151000-000001-000000,cmt:
[0023]:sno:37,cno:37,val:000001-000001-000000,cmt:
[0024]:sno:34,cno:34,val:000000-000000-000000,cmt:
[0025]:sno:02,cno:31,val:151000-000002-000000,cmt:
[0026]:sno:36,cno:36,val:000001-000000-000000,cmt:
[0027]:sno:35,cno:35,val:000000-000001-000000,cmt:
[0028]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0029]:sno:37,cno:37,val:000001-000001-000000,cmt:
[0030]:sno:35,cno:35,val:000000-000001-000000,cmt:
[0031]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0032]:sno:04,cno:14,val:000010-000070-000000,cmt:
[0033]:sno:00,cno:03,val:000000-000000-000000,cmt:
[0034]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0035]:sno:01,cno:33,val:000000-000000-000000,cmt:get_pixydat_index(gV[VAR_P]) > 0  &&  gV[VAR_P] < 3
[0036]:sno:01,cno:31,val:151000-000001-000000,cmt:
[0037]:sno:01,cno:45,val:144400-050050-000000,cmt:
[0038]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = -GyroMoterSpeed;
[0039]:sno:02,cno:45,val:111100-050050-000000,cmt:
[0040]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = GyroMoterSpeed;
[0041]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0042]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = 0;
[0043]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0044]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0045]:sno:01,cno:45,val:244400-050050-000000,cmt:
[0046]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = -GyroMoterSpeed;
[0047]:sno:02,cno:45,val:211100-050050-000000,cmt:
[0048]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = GyroMoterSpeed;
[0049]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0050]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = 0;
[0051]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0052]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0053]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0054]:sno:01,cno:33,val:000000-000000-000000,cmt:gAD[CN1] < 180  &&  gAD[CN1] > 8
[0055]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = -GyroMoterSpeed;
[0056]:sno:02,cno:33,val:000000-000000-000000,cmt:gAD[CN1] >= 180  &&  gAD[CN1] < 352
[0057]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = GyroMoterSpeed;
[0058]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0059]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_G] = 0;
[0060]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0061]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0062]:sno:01,cno:30,val:000300-000000-100000,cmt:
[0063]:sno:02,cno:14,val:000050-000000-100000,cmt:前
[0064]:sno:37,cno:37,val:000002-000001-000000,cmt:
[0065]:sno:30,cno:30,val:000000-000000-000000,cmt:
[0066]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = -MoterSpeed;  	// 後に行く
[0067]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = -MoterSpeed;  	// 後に行く
[0068]:sno:02,cno:14,val:000050-000010-100000,cmt:右
[0069]:sno:37,cno:37,val:000002-000001-000000,cmt:
[0070]:sno:30,cno:30,val:000000-000000-000000,cmt:
[0071]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = -MoterSpeed;  	// 左に行く
[0072]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = MoterSpeed;  	// 左に行く
[0073]:sno:02,cno:14,val:000050-000020-100000,cmt:後
[0074]:sno:37,cno:37,val:000002-000001-000000,cmt:
[0075]:sno:30,cno:30,val:000000-000000-000000,cmt:
[0076]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = MoterSpeed;  	// 前に行く
[0077]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = MoterSpeed;  	// 前に行く
[0078]:sno:02,cno:14,val:000050-000030-100000,cmt:左
[0079]:sno:37,cno:37,val:000002-000001-000000,cmt:
[0080]:sno:30,cno:30,val:000000-000000-000000,cmt:
[0081]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = MoterSpeed;  	// 右に行く
[0082]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = -MoterSpeed;  	// 右に行く
[0083]:sno:09,cno:09,val:000001-000000-000000,cmt:実験
[0084]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0085]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X = gAD[CN4] * 1 * IRdist + gAD[CN5] * 2 * IRdist + gAD[CN6] * 3 * IRdist;
[0086]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X /= gAD[CN4] + gAD[CN5] + gAD[CN6];
[0087]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y = gAD[CN4] * 1 * IRdist + gAD[CN5] * 2 * IRdist + gAD[CN6] * 1 * IRdist;
[0088]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y /= gAD[CN4] + gAD[CN5] + gAD[CN6];
[0089]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X *= 1000; 
[0090]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y *= 1000;
[0091]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_angle = atan(Weight_Y / Weight_X) * 1000;
[0092]:sno:36,cno:36,val:000002-000000-000000,cmt:
[0093]:sno:33,cno:33,val:000000-000000-000000,cmt:IRedge = gAD[CN2] * 18/15;  	// IR角度を代入
[0094]:sno:01,cno:33,val:000000-000000-000000,cmt:Weight_angle > 569  &&  Weight_angle < 580  &&  (IRedge < 20 || IRedge > 340)
[0095]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = MoterSpeed;  	// 真っすぐ行く
[0096]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = MoterSpeed;  	// 真っすぐ行く
[0097]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0098]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 180
[0099]:sno:33,cno:33,val:000000-000000-000000,cmt:IRedge = gAD[CN2] * 27/29;  	// IR角度を代入
[0100]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0101]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 400  	// ボールがないとき
[0102]:sno:36,cno:36,val:000003-000000-000000,cmt:
[0103]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = 0;  	// IRボールが見えていないので出力は無し
[0104]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = 0;  	// IRボールが見えていないので出力は無し
[0105]:sno:02,cno:33,val:000000-000000-000000,cmt:gAD[CN3] > 300  ||  (IRedge > 135  &&  IRedge < 225)
[0106]:sno:37,cno:37,val:000003-000001-000000,cmt:
[0107]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 180  	// 左にボールがあるとき
[0108]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge + 360 - IRaroundValue;
[0109]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0110]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・右前、左後　　〜左にボールがあるとき〜
[0111]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・左前、右後　　〜左にボールがあるとき〜
[0112]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0113]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge + IRaroundValue;
[0114]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0115]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・右前、左後　　〜右にボールがあるとき〜
[0116]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・左前、右後　　〜右にボールがあるとき〜
[0117]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0118]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0119]:sno:36,cno:36,val:000003-000000-000000,cmt:
[0120]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge;
[0121]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0122]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// IRボールの方向へ行くための 速さ を計算・右前、左後
[0123]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// IRボールの方向へ行くための 速さ を計算・左前、右後
[0124]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0125]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0126]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0127]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_A] = - RfLb_X + gV[VAR_G];  	// 最終的な計算結果を代入・左前モータ
[0128]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_B] = LfRb_Y + gV[VAR_G];  	// 最終的な計算結果を代入・右前モータ
[0129]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_C] = - LfRb_Y + gV[VAR_G];  	// 最終的な計算結果を代入・左後モータ
[0130]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_D] = RfLb_X + gV[VAR_G];  	// 最終的な計算結果を代入・右後モータ
[0131]:sno:38,cno:38,val:400401-402403-999999,cmt:
[0132]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_A] = IRedge;
[0133]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_B] = Weight_angle;
[0134]:sno:33,cno:33,val:000000-000000-000000,cmt:printf("IRedge : %4ld , Weight_angle : %4ld\r\n",gV[VAR_A],gV[VAR_B]);
[0135]:sno:00,cno:03,val:000000-000000-000000,cmt:
[0136]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = MoterSpeed;  	// 前に行く
[0137]:sno:02,cno:14,val:000050-000030-100000,cmt:左
[0138]:sno:37,cno:37,val:000002-000001-000000,cmt:
[0139]:sno:30,cno:30,val:000000-000000-000000,cmt:
[0140]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = MoterSpeed;  	// 右に行く
[0141]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = -MoterSpeed;  	// 右に行く
[0142]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0143]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X = gAD[CN4] * 1 * IRdist + gAD[CN5] * 2 * IRdist + gAD[CN6] * 3 * IRdist;
[0144]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X /= gAD[CN4] + gAD[CN5] + gAD[CN6];
[0145]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y = gAD[CN4] * 1 * IRdist + gAD[CN5] * 2 * IRdist + gAD[CN6] * 1 * IRdist;
[0146]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y /= gAD[CN4] + gAD[CN5] + gAD[CN6];
[0147]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_X *= 1000; 
[0148]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_Y *= 1000;
[0149]:sno:33,cno:33,val:000000-000000-000000,cmt:Weight_angle = atan(Weight_Y / Weight_X) * 1000;
[0150]:sno:36,cno:36,val:000002-000000-000000,cmt:
[0151]:sno:33,cno:33,val:000000-000000-000000,cmt:IRedge = gAD[CN2] * 18/15;  	// IR角度を代入
[0152]:sno:01,cno:33,val:000000-000000-000000,cmt:Weight_angle > 569  &&  Weight_angle < 580  &&  (IRedge < 20 || IRedge > 340)
[0153]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = MoterSpeed;  	// 真っすぐ行く
[0154]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = MoterSpeed;  	// 真っすぐ行く
[0155]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0156]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 180
[0157]:sno:33,cno:33,val:000000-000000-000000,cmt:IRedge = gAD[CN2] * 27/29;  	// IR角度を代入
[0158]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0159]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 400  	// ボールがないとき
[0160]:sno:36,cno:36,val:000003-000000-000000,cmt:
[0161]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = 0;  	// IRボールが見えていないので出力は無し
[0162]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = 0;  	// IRボールが見えていないので出力は無し
[0163]:sno:02,cno:33,val:000000-000000-000000,cmt:gAD[CN3] > 300  ||  (IRedge > 135  &&  IRedge < 225)
[0164]:sno:37,cno:37,val:000003-000001-000000,cmt:
[0165]:sno:01,cno:33,val:000000-000000-000000,cmt:IRedge > 180  	// 左にボールがあるとき
[0166]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge + 360 - IRaroundValue;
[0167]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0168]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・右前、左後　　〜左にボールがあるとき〜
[0169]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・左前、右後　　〜左にボールがあるとき〜
[0170]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0171]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge + IRaroundValue;
[0172]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0173]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・右前、左後　　〜右にボールがあるとき〜
[0174]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// 回り込むための 速さ を計算・左前、右後　　〜右にボールがあるとき〜
[0175]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0176]:sno:03,cno:00,val:000000-000000-000000,cmt:
[0177]:sno:36,cno:36,val:000003-000000-000000,cmt:
[0178]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_I] = 45 + IRedge;
[0179]:sno:31,cno:31,val:080095-000360-000000,cmt:
[0180]:sno:33,cno:33,val:000000-000000-000000,cmt:RfLb_X = cos(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// IRボールの方向へ行くための 速さ を計算・右前、左後
[0181]:sno:33,cno:33,val:000000-000000-000000,cmt:LfRb_Y = sin(gV[VAR_I] * 3.1415 / 180) * MoterSpeed;  	// IRボールの方向へ行くための 速さ を計算・左前、右後
[0182]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0183]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0184]:sno:00,cno:02,val:000000-000000-000000,cmt:
[0185]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_A] = - RfLb_X + gV[VAR_G];  	// 最終的な計算結果を代入・左前モータ
[0186]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_B] = LfRb_Y + gV[VAR_G];  	// 最終的な計算結果を代入・右前モータ
[0187]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_C] = - LfRb_Y + gV[VAR_G];  	// 最終的な計算結果を代入・左後モータ
[0188]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_D] = RfLb_X + gV[VAR_G];  	// 最終的な計算結果を代入・右後モータ
[0189]:sno:38,cno:38,val:400401-402403-999999,cmt:
[0190]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_A] = IRedge;
[0191]:sno:33,cno:33,val:000000-000000-000000,cmt:gV[VAR_B] = Weight_angle;
[0192]:sno:33,cno:33,val:000000-000000-000000,cmt:printf("IRedge : %4ld , Weight_angle : %4ld\r\n",gV[VAR_A],gV[VAR_B]);
[0193]:sno:00,cno:03,val:000000-000000-000000,cmt:
